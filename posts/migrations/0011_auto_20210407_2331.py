# Generated by Django 3.1.7 on 2021-04-07 23:31

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('art', '0004_auto_20210331_1623'),
        ('members', '0015_auto_20201228_2048'),
        ('music', '0006_musicappprofile_musicpagesection'),
        ('objects', '0014_auto_20201115_1955'),
        ('documentation', '0020_auto_20210331_1623'),
        ('posts', '0010_responsepost'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='responsepost',
            options={'ordering': ['-publication_date', '-creation_date']},
        ),
        migrations.AddField(
            model_name='responsepost',
            name='meta_description',
            field=models.TextField(blank=True, max_length=155, null=True),
        ),
        migrations.AlterField(
            model_name='responsepost',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.post'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_public', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('members_only', models.BooleanField(default=True)),
                ('text', models.TextField(max_length=65535)),
                ('meta_description', models.TextField(blank=True, max_length=155, null=True)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('report_type', models.CharField(choices=[('bug', 'Bug Report'), ('flag', 'Flagged for Review')], default='flag', max_length=64)),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='music.album')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='documentation.article')),
                ('code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.code')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='art.gallery')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.image')),
                ('link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.link')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.member')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.post')),
                ('sound', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.sound')),
                ('story', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='documentation.story')),
                ('tags', models.ManyToManyField(blank=True, to='objects.Tag')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='music.track')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.video')),
                ('visual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='art.visual')),
            ],
            options={
                'ordering': ['-publication_date', '-creation_date'],
            },
        ),
    ]
