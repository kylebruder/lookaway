# Generated by Django 3.0.7 on 2020-10-19 23:11

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('objects', '0013_auto_20201014_2358'),
        ('members', '0013_auto_20200928_1714'),
    ]

    operations = [
        migrations.CreateModel(
            name='Visual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(default=0)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_public', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=128, unique=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('artist', models.CharField(max_length=128)),
                ('text', models.TextField(blank=True, max_length=65535)),
                ('meta_description', models.TextField(blank=True, max_length=155, null=True)),
                ('order', models.DecimalField(decimal_places=4, max_digits=8)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('medium', models.CharField(blank=True, max_length=1028)),
                ('credits', models.CharField(blank=True, max_length=1028)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects.Image')),
                ('links', models.ManyToManyField(blank=True, to='objects.Link')),
                ('marshmallows', models.ManyToManyField(blank=True, to='members.Marshmallow')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.Member')),
                ('tags', models.ManyToManyField(blank=True, to='objects.Tag')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.Video')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(default=0)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_public', models.BooleanField(default=False)),
                ('publication_date', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=128, unique=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('artist', models.CharField(max_length=128)),
                ('text', models.TextField(blank=True, max_length=65535)),
                ('meta_description', models.TextField(blank=True, max_length=155, null=True)),
                ('location', models.CharField(blank=True, max_length=128)),
                ('links', models.ManyToManyField(blank=True, to='objects.Link')),
                ('marshmallows', models.ManyToManyField(blank=True, to='members.Marshmallow')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.Member')),
                ('tags', models.ManyToManyField(blank=True, to='objects.Tag')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.Video')),
                ('visuals', models.ManyToManyField(blank=True, to='art.Visual')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
